// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var com = com || {};

/**
 * @const
 * @namespace
 */
com.banca = com.banca || {};

/**
 * @const
 * @namespace
 */
com.banca.game = com.banca.game || {};

/**
 * @const
 * @namespace
 */
com.banca.game.protocols = com.banca.game.protocols || {};

/**
 * @const
 * @namespace
 */
com.banca.game.protocols.common = com.banca.game.protocols.common || {};

/**
 * @enum
 */
com.banca.game.protocols.common.RoomType = {
  BanCaRoom: 1
};

/**
 * @constructor
 */
com.banca.game.protocols.common.User = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.banca.game.protocols.common.User}
 */
com.banca.game.protocols.common.User.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.banca.game.protocols.common.User=} obj
 * @returns {com.banca.game.protocols.common.User}
 */
com.banca.game.protocols.common.User.getRootAsUser = function(bb, obj) {
  return (obj || new com.banca.game.protocols.common.User).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.banca.game.protocols.common.User.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
com.banca.game.protocols.common.User.prototype.balance = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.banca.game.protocols.common.User.prototype.username = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.banca.game.protocols.common.User.prototype.displayName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
com.banca.game.protocols.common.User.prototype.avatar = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.banca.game.protocols.common.User.startUser = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
com.banca.game.protocols.common.User.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} balance
 */
com.banca.game.protocols.common.User.addBalance = function(builder, balance) {
  builder.addFieldInt64(1, balance, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} usernameOffset
 */
com.banca.game.protocols.common.User.addUsername = function(builder, usernameOffset) {
  builder.addFieldOffset(2, usernameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} displayNameOffset
 */
com.banca.game.protocols.common.User.addDisplayName = function(builder, displayNameOffset) {
  builder.addFieldOffset(3, displayNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} avatarOffset
 */
com.banca.game.protocols.common.User.addAvatar = function(builder, avatarOffset) {
  builder.addFieldOffset(4, avatarOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.banca.game.protocols.common.User.endUser = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.com = com;
